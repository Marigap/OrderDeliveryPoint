openapi: "3.0.0"
info:
  version: 1.0.0
  title: Order Delivery Point API
  contact:
    name: API Support
    url: https://non.existing/contacts
    email: mail@miet.ru
  description: OrderDeliveryPoint service API for communication with web client
servers:
  - url: http://localhost:8000/OrderDeliveryAPI/v1
    description: OrderDeliveryPoint API server
tags:
  - name: orderDeliveries
    description: Order deliveries related actions tag
paths:
  /order-deliveries:
    get:
      summary: List all order deliveries
      description: List all order deliveries
      operationId: getAllOrderDeliveries
      x-lg-handler: 'App\Http\ApiV1\Modules\OrderDeliveries\Controllers\DeliveryInfosController@index'
      x-lg-route-name: 'getAllOrderDeliveries'
      x-lg-skip-request-generation: true
      tags:
        - orderDeliveries
      responses:
        '200':
          description: Successfully get all order deliveries
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryInfos"
        'default':
          description: Unexpected status code received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Add new order delivery
      description: Add new order delivery
      operationId: postOrderDelivery
      x-lg-handler: 'App\Http\ApiV1\Modules\OrderDeliveries\Controllers\DeliveryInfosController@post'
      x-lg-route-name: 'postOrderDelivery'
      x-lg-skip-request-generation: true
      tags:
        - orderDeliveries
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryInfo"
      responses:
        '201':
          description: Successfully add new order delivery
        '400':
          description: Bad request from client received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Unexpected status code received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /order-deliveries/{delivery_id}:
    get:
      summary: Get order delivery by delivery id
      description: Get order delivery by delivery id
      operationId: getOrderDeliveryById
      x-lg-handler: 'App\Http\ApiV1\Modules\OrderDeliveries\Controllers\DeliveryInfosController@get'
      x-lg-route-name: 'getOrderDeliveryById'
      x-lg-skip-request-generation: true
      tags:
        - orderDeliveries
      parameters:
        - name: delivery_id
          in: path
          required: true
          description: order delivery id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully get the order delivery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryInfo"
        '404':
          description: Order delivery with such id doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Unexpected status code received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update order delivery status and location by delivery id
      description: Update order delivery status and location by delivery id
      operationId: updateOrderDeliveryById
      x-lg-handler: 'App\Http\ApiV1\Modules\OrderDeliveries\Controllers\DeliveryInfosController@update'
      x-lg-route-name: 'updateOrderDeliveryById'
      x-lg-skip-request-generation: true
      tags:
        - orderDeliveries
      parameters:
        - name: delivery_id
          in: path
          required: true
          description: order delivery id of order delivery that need to update
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: New status for order delivery
          schema:
            type: string
            enum:
              - accepted
              - processing
              - in_transit
              - delivered
              - picked_up
        - name: current_location
          in: query
          description: New current_location for order delivery
          schema:
            type: string
      responses:
        '200':
          description: Successfully updated the order delivery
        '404':
          description: Order delivery with such id doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Unexpected status code received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete order delivery by delivery id
      description: Delete order delivery by delivery id, considered to do it when order is picked up from order delivery point
      operationId: deleteOrderDeliveryById
      x-lg-handler: 'App\Http\ApiV1\Modules\OrderDeliveries\Controllers\DeliveryInfosController@delete'
      x-lg-route-name: 'deleteOrderDeliveryById'
      x-lg-skip-request-generation: true
      tags:
        - orderDeliveries
      parameters:
        - name: delivery_id
          in: path
          required: true
          description: order delivery id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully deleted the order delivery
        '404':
          description: Order delivery with such id doesn't exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        'default':
          description: Unexpected status code received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


components:
  schemas:
    ClientInfo:
      type: object
      required:
        - id
        - client_name
        - phone
        - email
      properties:
        id:
          type: integer
          format: int64
        client_name:
          type: string
        phone:
          type: string
          format: phone
          pattern: 7\d{10}
        email:
          type: string
          format: email
    OrderInfo:
      type: object
      required:
        - id
        - order_name
        - order_weight
      properties:
        id:
          type: integer
          format: int64
        order_name:
          type: string
        order_weight:
          type: integer
          format: float
    DeliveryInfo:
      type: object
      required:
        - id
        - client_info
        - order_info
        - status
        - current_location
        - need_notify
        - started_at
        - updated_at
      properties:
        id:
          type: integer
          format: int64
        client_info:
          $ref: '#/components/schemas/ClientInfo'
        order_info:
          $ref: '#/components/schemas/OrderInfo'
        status:
          type: string
          enum:
            - accepted
            - processing
            - in_transit
            - delivered
            - picked_up
        current_location:
          type: string
        need_notify:
          type: boolean
        started_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    DeliveryInfos:
      type: array
      items:
        $ref: "#/components/schemas/DeliveryInfo"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
